// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Project {
  id                    Int      @id @default(autoincrement())
  title                 String
  slug                  String   @unique
  description           String   @db.Text
  longDescription       String?  @db.Text @map("long_description")
  category              String
  technologies          Json     // Array of technology objects
  features              Json?    // Array of features
  challenges            Json?    // Array of challenges
  solutions             Json?    // Array of solutions
  images                Json?    // Array of image URLs
  thumbnail             String?  // Main project image
  liveUrl               String?  @map("live_url")
  githubUrl             String?  @map("github_url")
  demoUrl               String?  @map("demo_url")
  duration              String?  // Project duration
  teamSize              String?  @map("team_size")
  status                ProjectStatus @default(published)
  isFeatured            Boolean  @default(false) @map("is_featured")
  isActive              Boolean  @default(true) @map("is_active")
  views                 Int      @default(0)
  likes                 Int      @default(0)
  createdAt             DateTime @default(now()) @map("created_at")
  updatedAt             DateTime @updatedAt @map("updated_at")
  
  // Relations
  projectImages         ProjectImage[]
  projectTechnologies   ProjectTechnology[]
  
  @@map("projects")
}

model ProjectImage {
  id          Int      @id @default(autoincrement())
  projectId   Int      @map("project_id")
  imageUrl    String   @map("image_url")
  altText     String?  @map("alt_text")
  caption     String?
  order       Int      @default(0)
  isMain      Boolean  @default(false) @map("is_main")
  createdAt   DateTime @default(now()) @map("created_at")
  
  // Relations
  project     Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  
  @@map("project_images")
}

model ProjectTechnology {
  id          Int      @id @default(autoincrement())
  projectId   Int      @map("project_id")
  name        String
  category    String?  // e.g., "Frontend", "Backend", "Database"
  icon        String?  // Icon class or URL
  color       String?  // Color hex code
  order       Int      @default(0)
  createdAt   DateTime @default(now()) @map("created_at")
  
  // Relations
  project     Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  
  @@map("project_technologies")
}

model Admin {
  id                    Int      @id @default(autoincrement())
  email                 String   @unique
  username              String   @unique
  passwordHash          String?  @map("password_hash")
  firstName             String?  @map("first_name")
  lastName              String?  @map("last_name")
  role                  Role     @default(admin)
  isActive              Boolean  @default(true) @map("is_active")
  createdAt             DateTime @default(now()) @map("created_at")
  updatedAt             DateTime @updatedAt @map("updated_at")
  
  @@map("admins")
}

enum ProjectStatus {
  draft
  published
  archived
}

enum Role {
  admin
  super_admin
}
